require('causalImpact')
require('CausalImpact')
devtools::install_github("google/CausalImpact")
library('devtools')
install.packages('devtools')
library('devtools')
devtools::install_github("google/CausalImpact")
require('CausalImpact')
set.seed(1)
x1 <- 100 + arima.sim(model = list(ar = 0.999), n = 100)
y <- 1.2 * x1 + rnorm(100)
y[71:100] <- y[71:100] + 10
data <- cbind(y, x1)
dim(x1)
x1
matplot(data)
plot(data[,1], data[,2])
plot(data[,1], data[,3])
dim(data)
head(data)
plot(data[1], data[2])
plot(data[,1], data[,2], type='l')
matplot(data[,1], data[,2], type='l')
matplot(data)
?matplot
matplot(mtcars[,4], mtcars[,5])
matplot(mtcars[,4], mtcars[,5], type='l')
pre.period <- c(1, 70)
post.period <- c(71, 100)
impact <- CausalImpact(data, pre.period, post.period)
plot(impact)
summary(impact)
summary(impact, "report")
summary(impact)
pre.period <- c(1, 30)
post.period <- c(31, 100)
impact <- CausalImpact(data, pre.period, post.period)
plot(impact)
arima.sim(model = list(ar = 0.999), n = 100)
arima.sim(model = list(ar = 0.999), n = 100)
hist(arima.sim(model = list(ar = 0.999), n = 100))
hist(arima.sim(model = list(ar = 0.999), n = 100))
hist(arima.sim(model = list(ar = 0.999), n = 100))
hist(arima.sim(model = list(ar = 0.999), n = 100))
hist(arima.sim(model = list(ar = 0.999), n = 100))
hist(arima.sim(model = list(ar = 0.999), n = 100))
hist(arima.sim(model = list(ar = 0.999), n = 100))
hist(arima.sim(model = list(ar = 0.999), n = 100))
hist(arima.sim(model = list(ar = 0.999), n = 100))
plot(arima.sim(model = list(ar = 0.999), n = 100))
plot(arima.sim(model = list(ar = 0.999), n = 100))
?arima.sim
7/17
0.40*30
require('devtools')
install_github('Rsenal', 'brooksandrew')
require(Rsenal)
?Rsenal
?Rsenal::predSortPlot
rules2df
install_github('Rsenal', 'brooksandrew')
install_github('brooksandrew/Rsenal')
require(Rsenal)
demo(Rsenal)
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
key <- 'x42rp9qg6jjjydn2u8ng8stx'
key <- 'x42rp9qg6jjjydn2u8ng8stx'
request <- paste('http://api.wmata.com/NextBusService.svc/json/jPredictions?StopID=', input$stopID, '&api_key=', key, sep='')
temp <- getURL(URLencode(request), ssl.verifypeer=F)
preddf <- data.frame(fromJSON(temp, simplifyVector=T))
request <- paste('http://api.wmata.com/NextBusService.svc/json/jPredictions?StopID=', '1002587', '&api_key=', key, sep='')
temp <- getURL(URLencode(request), ssl.verifypeer=F)
preddf <- data.frame(fromJSON(temp, simplifyVector=T))
pred2print <- preddf[,c('Predictions.DirectionText', 'Predictions.Minutes', 'Predictions.RouteID')]
names(pred2print)[names(pred2print)=='Predictions.DirectionText'] <- 'Direction'
names(pred2print)[names(pred2print)=='Predictions.Minutes'] <- 'Prediction'
names(pred2print)[names(pred2print)=='Predictions.RouteID'] <- 'Bus'
pred2print$time <- Sys.time()
print(pred2print)
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
names(preddf)
names(preddf) %in% c('Predictions.DirectionText', 'Predictions.Minutes', 'Predictions.RouteID')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
requestBusStops <- paste('http://api.wmata.com/Bus.svc/json/jRouteDetails?routeId=', '64', '&date=', Sys.Date(), '&api_key=', key, sep='')
temp <- getURL(URLencode(requestBusStops), ssl.verifypeer=F)
stops <- fromJSON(temp, simplifyVector=T)
stopsdf <- stops$Direction0$Stops
stopsdf$StopID[match('1003043', stopsdf$Name)]
stopsdf$StopID[match('1003043', stopsdf$Name)]
stopsDF
stopsdf
shiny::runApp('Documents/github/shinyapps/wmataAPI')
sapply(stopsdf, class)
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
View(stopsdf)
stops
stops
str(stops)
stops$Direction0
stops$Direction0$TripHeadsign
shiny::runApp('Documents/github/shinyapps/wmataAPI')
stops$Direction1$Stops
stops$Direction0$Stops
stops$Direction0$Stops$Name
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
dirs <- c(stops$Direction0$TripHeadsign, stops$Direction1$TripHeadsign)
dirs
dirs[1]
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
stopsdf <- unique(c(stops$Direction0Stops$Name, stops$Direction1$Stops$Name))
stopsdf
stops$Direction0Stops
stops <- fromJSON(temp, simplifyVector=T)
stops$Direction0
names(stops$Direction0)
names(stops$Direction1)
stops
stops$Direction0$TripHeadsign
unique(stops$Direction0$TripHeadsign, stops$Direction1$TripHeadsign)
unique(stops$Direction0$TripHeadsign, stops$Direction1$TripHeadsign))
unique(stops$Direction0$TripHeadsign, stops$Direction1$TripHeadsign))
unique(stops$Direction0$TripHeadsign, stops$Direction1$TripHeadsign)
unique(c(stops$Direction0$TripHeadsign, stops$Direction1$TripHeadsign))
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
requestBusStops <- paste('http://api.wmata.com/Bus.svc/json/jRouteDetails?routeId=', 'input$busid,'4B '&date=', Sys.Date(), '&api_key=', key, sep='')
temp <- getURL(URLencode(requestBusStops), ssl.verifypeer=F)
stops <- fromJSON(temp, simplifyVector=T)
requestBusStops <- paste('http://api.wmata.com/Bus.svc/json/jRouteDetails?routeId=', 'input$busid,'4B', '&date=', Sys.Date(), '&api_key=', key, sep='')
temp <- getURL(URLencode(requestBusStops), ssl.verifypeer=F)
stops <- fromJSON(temp, simplifyVector=T)
requestBusStops <- paste('http://api.wmata.com/Bus.svc/json/jRouteDetails?routeId=', 'input$busid', '4B', '&date=', Sys.Date(), '&api_key=', key, sep='')
temp <- getURL(URLencode(requestBusStops), ssl.verifypeer=F)
stops <- fromJSON(temp, simplifyVector=T)
stops
unique(c(stops$Direction0$TripHeadsign, stops$Direction1$TripHeadsign))
stops <- fromJSON(temp, simplifyVector=T)
temp <- getURL(URLencode(requestBusStops), ssl.verifypeer=F)
stops <- fromJSON(temp, simplifyVector=T)
fromJSON(temp, simplifyVector=T)
fromJSON(temp, simplifyVector=F)
fromJSON(temp, simplifyVector=F)
temp
requestBusStops <- paste('http://api.wmata.com/Bus.svc/json/jRouteDetails?routeId=', '4B', '&date=', Sys.Date(), '&api_key=', key, sep='')
temp <- getURL(URLencode(requestBusStops), ssl.verifypeer=F)
stops <- fromJSON(temp, simplifyVector=T)
stops
unique(c(stops$Direction0$TripHeadsign, stops$Direction1$TripHeadsign))
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
shiny::runApp('Documents/github/shinyapps/wmataAPI')
require('shinyapps')
setwd('/Users/ajb/Documents/github/shinyapps/wmataAPI/')
deployApp()
deployApp()
require('ggmaps')
require('ggmap')
deployApp()
deployApp()
require('ggmaps')
install.packages('ggmaps')
deployApp()
deployApp()
